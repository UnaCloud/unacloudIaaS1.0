pw.println("InstallHome.directory.INSTALL_HOME="+(args[0].replaceAll("\\\\+","\\\\\\\\").replace(":","\\:")));


create database clouder;
grant all privileges on clouder.* to root@localhost;
mysql.exe -u root clouder < C:\Users\Clouder\Documents\UnaCloudInstallers\Server\tables.sql
grant usage on *.* to unacloud@localhost identified by 'unac10ud';
grant all privileges on Clouder.* to unacloud@localhost;
mysql -u root -e "UPDATE mysql.user SET Password = PASSWORD('unac10ud') WHERE User = 'unacloud';"
mysql -u root -e "UPDATE mysql.user SET Password = PASSWORD('root1445') WHERE User = 'root';"
mysql -u root -e "FLUSH PRIVILEGES;"

grant all privileges on *.* to unacloud2@'clouder-b51024' identified by 'unac10ud2';
grant all privileges on *.* to unacloud2@157.253.236.161;
FLUSH PRIVILEGES;

create view UserGroups as select SystemUser_SYSTEMUSERNAME as SYSTEMUSERNAME, userGroups_SYSTEMUSERTYPENAME as UserGroup from SYSTEMUSER_SYSTEMUSERTYPE;
CREATE TABLE IPDIRECTION (ID BIGINT NOT NULL, PRIMARY KEY (ID));
CREATE TABLE DISKREGISTER (ID BIGINT AUTO_INCREMENT NOT NULL, DISKWRITES BIGINT, DISKWRITEBYTES BIGINT, REGISTERDATE DATETIME, DISKREADBYTES BIGINT, FILEUNIT VARCHAR(255), DISKREADS BIGINT, PHYSICALMACHINE_PHYSICALMACHINENAME VARCHAR(255), PRIMARY KEY (ID));
CREATE TABLE CPUREGISTER (ID BIGINT AUTO_INCREMENT NOT NULL, CPUSYS INTEGER, USERS VARCHAR(255), REGISTERDATE DATETIME, CPUIDLE INTEGER, PHYSICALMACHINE_PHYSICALMACHINENAME VARCHAR(255), PRIMARY KEY (ID));
CREATE TABLE VIRTUALMACHINEEXECUTION (VIRTUALMACHINEEXECUTIONCODE VARCHAR(255) NOT NULL, VIRTUALMACHINEEXECUTIONSTOP DATETIME, VIRTUALMACHINEEXECUTIONSTATUSMESSAGE VARCHAR(255), MAX INTEGER, VIRTUALMACHINEEXECUTIONSTATUS INTEGER, SHOWPROGRESSBAR TINYINT(1) default 0, VIRTUALMACHINEEXECUTIONRAMMEMORY INTEGER, VIRTUALMACHINEEXECUTIONHARDDISK BIGINT, ISPERCENTAGE TINYINT(1) default 0, VIRTUALMACHINEEXECUTIONIP VARCHAR(255), VIRTUALMACHINEEXECUTIONCORES INTEGER, VIRTUALMACHINEEXECUTIONSTART DATETIME, CURRENT INTEGER, VIRTUALMACHINEEXECUTIONTIME DATETIME, VIRTUALMACHINE_VIRTUALMACHINECODE INTEGER, SYSTEMUSER_SYSTEMUSERNAME VARCHAR(255), TEMPLATE_TEMPLATECODE INTEGER, PRIMARY KEY (VIRTUALMACHINEEXECUTIONCODE));
CREATE TABLE SYSTEMUSER_SYSTEMUSERTYPE (SystemUser_SYSTEMUSERNAME VARCHAR(255) NOT NULL, userGroups_SYSTEMUSERTYPENAME VARCHAR(255) NOT NULL, PRIMARY KEY (SystemUser_SYSTEMUSERNAME, userGroups_SYSTEMUSERTYPENAME));
CREATE TABLE MEMORYREGISTER (ID BIGINT AUTO_INCREMENT NOT NULL, MEMFREE BIGINT, MEMTOTAL BIGINT, MEMUSED BIGINT, REGISTERTIME DATETIME, PHYSICALMACHINE_PHYSICALMACHINENAME VARCHAR(255), PRIMARY KEY (ID));
CREATE TABLE APPLICATION (APPLICATIONCODE INTEGER AUTO_INCREMENT NOT NULL, APPLICATIONNAME VARCHAR(255), PRIMARY KEY (APPLICATIONCODE));
CREATE TABLE SYSTEMUSER_TEMPLATE (templates_TEMPLATECODE INTEGER NOT NULL, systemUser_SYSTEMUSERNAME VARCHAR(255) NOT NULL, PRIMARY KEY (templates_TEMPLATECODE, systemUser_SYSTEMUSERNAME));
CREATE TABLE SYSTEMUSERTYPE (SYSTEMUSERTYPENAME VARCHAR(255) NOT NULL, PRIMARY KEY (SYSTEMUSERTYPENAME));
CREATE TABLE OPERATINGSYSTEM (OPERATINGSYSTEMCODE INTEGER AUTO_INCREMENT NOT NULL, OPERATINGSYSTEMNAME VARCHAR(255), CONFIGURATIONCLASS VARCHAR(255), OPERATINGSYSTEMTYPE_OPERATINGSYSTEMTYPECODE INTEGER, PRIMARY KEY (OPERATINGSYSTEMCODE));
CREATE TABLE LABORATORYTYPE (LABORATORYTYPECODE INTEGER AUTO_INCREMENT NOT NULL, LABORATORYTYPENAME VARCHAR(255), PRIMARY KEY (LABORATORYTYPECODE));
CREATE TABLE IPPOOL (POOLSIZE INTEGER, INITIALIP_ID BIGINT NOT NULL, PRIMARY KEY (INITIALIP_ID));
CREATE TABLE VIRTUALMACHINESECURITY (VIRTUALMACHINESECURITYCODE INTEGER AUTO_INCREMENT NOT NULL, VIRTUALMACHINESECURITYUSER VARCHAR(255), VIRTUALMACHINESECURITYPORT INTEGER, VIRTUALMACHINESECURITYACCESS VARCHAR(255), VIRTUALMACHINESECURITYPASSWORD VARCHAR(255), VIRTUALMACHINESECURITYNAME VARCHAR(255), PRIMARY KEY (VIRTUALMACHINESECURITYCODE));
CREATE TABLE IPPOOL_IPDIRECTION (IPPool_INITIALIP_ID BIGINT NOT NULL, directions_ID BIGINT NOT NULL, PRIMARY KEY (IPPool_INITIALIP_ID, directions_ID));
CREATE TABLE SWAPREGISTER (ID BIGINT AUTO_INCREMENT NOT NULL, SWAPPAGIN BIGINT, SWAPUSED BIGINT, SWAPPAGOUT BIGINT, SWAPFREE BIGINT, SWAPTOTAL BIGINT, REGISTERDATE DATETIME, PHYSICALMACHINE_PHYSICALMACHINENAME VARCHAR(255), PRIMARY KEY (ID));
CREATE TABLE PHYSICALMACHINE (PHYSICALMACHINENAME VARCHAR(255) NOT NULL, AVERAGEAVAILABILITY DOUBLE, PHYSICALMACHINEIP VARCHAR(255), PHYSICALMACHINEVIRTUALMACHINESON INTEGER, PHYSICALMACHINEARCHITECTURE VARCHAR(255), PHYSICALMACHINEVIRTUALIP VARCHAR(255), PHYSICALMACHINECOLUMN INTEGER, PHYSICALMACHINEVIRTUALNETMASK VARCHAR(255), PHYSICALMACHINEVIRTUALMAC VARCHAR(255), PHYSICALMACHINERAMMEMORY INTEGER, PHYSICALMACHINESTATE INTEGER, PHYSICALMACHINECORES INTEGER, PHYSICALMACHINEUSER VARCHAR(255), PHYSICALMACHINEDISK BIGINT, PHYSICALMACHINEHYPERVISORPATH VARCHAR(255), PHYSICALMACHINEROW INTEGER, PHYSICALMACHINEMAC VARCHAR(255), EXPECTEDFAILURES DOUBLE, LABORATORY_LABORATORYCODE INTEGER, OPERATINGSYSTEM_OPERATINGSYSTEMCODE INTEGER, PRIMARY KEY (PHYSICALMACHINENAME));
CREATE TABLE SYSTEMUSER (SYSTEMUSERNAME VARCHAR(255) NOT NULL, SYSTEMUSEREMAIL VARCHAR(255), SYSTEMUSERPASSWORD VARCHAR(255), PRIMARY KEY (SYSTEMUSERNAME));
CREATE TABLE ELASTICRULE (ID BIGINT NOT NULL, UPPERLIMIT INTEGER, LOWERLIMIT INTEGER, ACTIVE TINYINT(1) default 0, MULTIPLY TINYINT(1) default 0, FACTOR DOUBLE, ADDITION TINYINT(1) default 0, PRIMARY KEY (ID));
CREATE TABLE VIRTUALMACHINE (VIRTUALMACHINECODE INTEGER AUTO_INCREMENT NOT NULL, SNAPSHOTID VARCHAR(255), VIRTUALMACHINEIP VARCHAR(255), CPUSTATE INTEGER, CONFIGURED TINYINT(1) default 0, VIRTUALMACHINEPATH VARCHAR(500), VIRTUALMACHINENAME VARCHAR(255), LOCALLYSTORED TINYINT(1) default 0, AUTOPROTECT TINYINT(1) default 0, IPPOLICY INTEGER, VIRTUALMACHINERAMMEMORY INTEGER, VIRTUALMACHINEHARDDISK BIGINT, VIRTUALMACHINECORES INTEGER, PERSISTENT TINYINT(1) default 0, MACPOLICY INTEGER, VIRTUALMACHINESTATE INTEGER, VIRTUALMACHINEMAC VARCHAR(255), TEMPLATE_TEMPLATECODE INTEGER, PHYSICALMACHINE_PHYSICALMACHINENAME VARCHAR(255), VIRTUALMACHINESECURITY_VIRTUALMACHINESECURITYCODE INTEGER, HYPERVISOR_HYPERVISORCODE INTEGER, PRIMARY KEY (VIRTUALMACHINECODE));
CREATE TABLE HYPERVISOR (HYPERVISORCODE INTEGER AUTO_INCREMENT NOT NULL, HYPERVISORNAME VARCHAR(255), PRIMARY KEY (HYPERVISORCODE));
CREATE TABLE LABORATORY (LABORATORYCODE INTEGER AUTO_INCREMENT NOT NULL, LABORATORYCOLUMNS INTEGER, LABORATORYNAME VARCHAR(255), LABORATORYROWS INTEGER, LABORATORYTYPE_LABORATORYTYPECODE INTEGER, PRIMARY KEY (LABORATORYCODE));
CREATE TABLE TEMPLATE (TEMPLATECODE INTEGER AUTO_INCREMENT NOT NULL, CUSTOMIZABLE TINYINT(1) default 0, VMXFILELOCATION VARCHAR(255), TEMPLATENAME VARCHAR(255), HIGHAVAILABILITY TINYINT(1) default 0, OPERATINGSYSTEM_OPERATINGSYSTEMCODE INTEGER, ELASTICRULE_ID BIGINT, TEMPLATETYPE_TEMPLATETYPECODE INTEGER, PRIMARY KEY (TEMPLATECODE));
CREATE TABLE CONSTANT (KEYSTRING VARCHAR(255) NOT NULL, VALUE VARCHAR(255), PRIMARY KEY (KEYSTRING));
CREATE TABLE TEMPLATE_APPLICATION (templates_TEMPLATECODE INTEGER NOT NULL, applications_APPLICATIONCODE INTEGER NOT NULL, PRIMARY KEY (templates_TEMPLATECODE, applications_APPLICATIONCODE));
CREATE TABLE OPERATINGSYSTEMTYPE (OPERATINGSYSTEMTYPECODE INTEGER AUTO_INCREMENT NOT NULL, OPERATINGSYSTEMTYPENAME VARCHAR(255), PRIMARY KEY (OPERATINGSYSTEMTYPECODE));
CREATE TABLE TEMPLATETYPE (TEMPLATETYPECODE INTEGER AUTO_INCREMENT NOT NULL, TEMPLATETYPENAME VARCHAR(255), PRIMARY KEY (TEMPLATETYPECODE));
ALTER TABLE DISKREGISTER ADD CONSTRAINT DISKREGISTER_PHYSICALMACHINE_PHYSICALMACHINENAME FOREIGN KEY (PHYSICALMACHINE_PHYSICALMACHINENAME) REFERENCES PHYSICALMACHINE (PHYSICALMACHINENAME);
ALTER TABLE CPUREGISTER ADD CONSTRAINT FK_CPUREGISTER_PHYSICALMACHINE_PHYSICALMACHINENAME FOREIGN KEY (PHYSICALMACHINE_PHYSICALMACHINENAME) REFERENCES PHYSICALMACHINE (PHYSICALMACHINENAME);
ALTER TABLE VIRTUALMACHINEEXECUTION ADD CONSTRAINT VRTLMACHINEEXECUTIONVRTALMACHINEVIRTUALMACHINECODE FOREIGN KEY (VIRTUALMACHINE_VIRTUALMACHINECODE) REFERENCES VIRTUALMACHINE (VIRTUALMACHINECODE);
ALTER TABLE VIRTUALMACHINEEXECUTION ADD CONSTRAINT VIRTUALMACHINEEXECUTION_SYSTEMUSER_SYSTEMUSERNAME FOREIGN KEY (SYSTEMUSER_SYSTEMUSERNAME) REFERENCES SYSTEMUSER (SYSTEMUSERNAME);
ALTER TABLE VIRTUALMACHINEEXECUTION ADD CONSTRAINT FK_VIRTUALMACHINEEXECUTION_TEMPLATE_TEMPLATECODE FOREIGN KEY (TEMPLATE_TEMPLATECODE) REFERENCES TEMPLATE (TEMPLATECODE);
ALTER TABLE SYSTEMUSER_SYSTEMUSERTYPE ADD CONSTRAINT SYSTEMUSER_SYSTEMUSERTYPESystemUser_SYSTEMUSERNAME FOREIGN KEY (SystemUser_SYSTEMUSERNAME) REFERENCES SYSTEMUSER (SYSTEMUSERNAME);
ALTER TABLE SYSTEMUSER_SYSTEMUSERTYPE ADD CONSTRAINT SYSTEMUSERSYSTEMUSERTYPEsrGroupsSYSTEMUSERTYPENAME FOREIGN KEY (userGroups_SYSTEMUSERTYPENAME) REFERENCES SYSTEMUSERTYPE (SYSTEMUSERTYPENAME);
ALTER TABLE MEMORYREGISTER ADD CONSTRAINT MEMORYREGISTER_PHYSICALMACHINE_PHYSICALMACHINENAME FOREIGN KEY (PHYSICALMACHINE_PHYSICALMACHINENAME) REFERENCES PHYSICALMACHINE (PHYSICALMACHINENAME);
ALTER TABLE SYSTEMUSER_TEMPLATE ADD CONSTRAINT FK_SYSTEMUSER_TEMPLATE_templates_TEMPLATECODE FOREIGN KEY (templates_TEMPLATECODE) REFERENCES TEMPLATE (TEMPLATECODE);
ALTER TABLE SYSTEMUSER_TEMPLATE ADD CONSTRAINT FK_SYSTEMUSER_TEMPLATE_systemUser_SYSTEMUSERNAME FOREIGN KEY (systemUser_SYSTEMUSERNAME) REFERENCES SYSTEMUSER (SYSTEMUSERNAME);
ALTER TABLE OPERATINGSYSTEM ADD CONSTRAINT PRTNGSYSTEMPRTINGSYSTEMTYPEOPERATINGSYSTEMTYPECODE FOREIGN KEY (OPERATINGSYSTEMTYPE_OPERATINGSYSTEMTYPECODE) REFERENCES OPERATINGSYSTEMTYPE (OPERATINGSYSTEMTYPECODE);
ALTER TABLE IPPOOL ADD CONSTRAINT FK_IPPOOL_INITIALIP_ID FOREIGN KEY (INITIALIP_ID) REFERENCES IPDIRECTION (ID);
ALTER TABLE IPPOOL_IPDIRECTION ADD CONSTRAINT FK_IPPOOL_IPDIRECTION_IPPool_INITIALIP_ID FOREIGN KEY (IPPool_INITIALIP_ID) REFERENCES IPPOOL (INITIALIP_ID);
ALTER TABLE IPPOOL_IPDIRECTION ADD CONSTRAINT FK_IPPOOL_IPDIRECTION_directions_ID FOREIGN KEY (directions_ID) REFERENCES IPDIRECTION (ID);
ALTER TABLE SWAPREGISTER ADD CONSTRAINT SWAPREGISTER_PHYSICALMACHINE_PHYSICALMACHINENAME FOREIGN KEY (PHYSICALMACHINE_PHYSICALMACHINENAME) REFERENCES PHYSICALMACHINE (PHYSICALMACHINENAME);
ALTER TABLE PHYSICALMACHINE ADD CONSTRAINT FK_PHYSICALMACHINE_LABORATORY_LABORATORYCODE FOREIGN KEY (LABORATORY_LABORATORYCODE) REFERENCES LABORATORY (LABORATORYCODE);
ALTER TABLE PHYSICALMACHINE ADD CONSTRAINT PHYSICALMACHINEOPERATINGSYSTEM_OPERATINGSYSTEMCODE FOREIGN KEY (OPERATINGSYSTEM_OPERATINGSYSTEMCODE) REFERENCES OPERATINGSYSTEM (OPERATINGSYSTEMCODE);
ALTER TABLE VIRTUALMACHINE ADD CONSTRAINT VRTLMCHNVRTLMCHNSECURITYVIRTUALMACHINESECURITYCODE FOREIGN KEY (VIRTUALMACHINESECURITY_VIRTUALMACHINESECURITYCODE) REFERENCES VIRTUALMACHINESECURITY (VIRTUALMACHINESECURITYCODE);
ALTER TABLE VIRTUALMACHINE ADD CONSTRAINT VIRTUALMACHINE_PHYSICALMACHINE_PHYSICALMACHINENAME FOREIGN KEY (PHYSICALMACHINE_PHYSICALMACHINENAME) REFERENCES PHYSICALMACHINE (PHYSICALMACHINENAME);
ALTER TABLE VIRTUALMACHINE ADD CONSTRAINT FK_VIRTUALMACHINE_TEMPLATE_TEMPLATECODE FOREIGN KEY (TEMPLATE_TEMPLATECODE) REFERENCES TEMPLATE (TEMPLATECODE);
ALTER TABLE VIRTUALMACHINE ADD CONSTRAINT FK_VIRTUALMACHINE_HYPERVISOR_HYPERVISORCODE FOREIGN KEY (HYPERVISOR_HYPERVISORCODE) REFERENCES HYPERVISOR (HYPERVISORCODE);
ALTER TABLE LABORATORY ADD CONSTRAINT FK_LABORATORY_LABORATORYTYPE_LABORATORYTYPECODE FOREIGN KEY (LABORATORYTYPE_LABORATORYTYPECODE) REFERENCES LABORATORYTYPE (LABORATORYTYPECODE);
ALTER TABLE TEMPLATE ADD CONSTRAINT FK_TEMPLATE_ELASTICRULE_ID FOREIGN KEY (ELASTICRULE_ID) REFERENCES ELASTICRULE (ID);
ALTER TABLE TEMPLATE ADD CONSTRAINT FK_TEMPLATE_TEMPLATETYPE_TEMPLATETYPECODE FOREIGN KEY (TEMPLATETYPE_TEMPLATETYPECODE) REFERENCES TEMPLATETYPE (TEMPLATETYPECODE);
ALTER TABLE TEMPLATE ADD CONSTRAINT FK_TEMPLATE_OPERATINGSYSTEM_OPERATINGSYSTEMCODE FOREIGN KEY (OPERATINGSYSTEM_OPERATINGSYSTEMCODE) REFERENCES OPERATINGSYSTEM (OPERATINGSYSTEMCODE);
ALTER TABLE TEMPLATE_APPLICATION ADD CONSTRAINT TEMPLATE_APPLICATION_applications_APPLICATIONCODE FOREIGN KEY (applications_APPLICATIONCODE) REFERENCES APPLICATION (APPLICATIONCODE);
ALTER TABLE TEMPLATE_APPLICATION ADD CONSTRAINT FK_TEMPLATE_APPLICATION_templates_TEMPLATECODE FOREIGN KEY (templates_TEMPLATECODE) REFERENCES TEMPLATE (TEMPLATECODE);
CREATE TABLE SEQUENCE (SEQ_NAME VARCHAR(50) NOT NULL, SEQ_COUNT DECIMAL(38), PRIMARY KEY (SEQ_NAME));
INSERT INTO SEQUENCE(SEQ_NAME, SEQ_COUNT) values ('SEQ_GEN', 0);
