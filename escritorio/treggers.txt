DROP TRIGGER triggerexecutions;
DROP TRIGGER triggerexecutionsinsert;
DROP TRIGGER pmshutdown;
DROP TRIGGER executionstatechange;
DROP TRIGGER virtualmachinestatechange;
DROP TRIGGER executioninsert;

delimiter |
CREATE TRIGGER executionstatechange AFTER UPDATE ON VIRTUALMACHINEEXECUTION
FOR EACH ROW BEGIN
  IF NEW.VIRTUALMACHINEEXECUTIONSTATUS = 0 AND OLD.VIRTUALMACHINEEXECUTIONSTATUS <> 0 THEN
   UPDATE VIRTUALMACHINE vm SET vm.VIRTUALMACHINESTATE = 0
   WHERE NEW.VIRTUALMACHINE_VIRTUALMACHINECODE = vm.VIRTUALMACHINECODE;
  ELSEIF NEW.VIRTUALMACHINEEXECUTIONSTATUS <> 0 AND OLD.VIRTUALMACHINEEXECUTIONSTATUS = 0 THEN
   UPDATE VIRTUALMACHINE vm SET vm.VIRTUALMACHINESTATE = 1
   WHERE NEW.VIRTUALMACHINE_VIRTUALMACHINECODE = vm.VIRTUALMACHINECODE;
  END IF;
 END|

CREATE TRIGGER virtualmachinestatechange AFTER UPDATE ON VIRTUALMACHINE
FOR EACH ROW BEGIN
  IF NEW.VIRTUALMACHINESTATE = 0 AND OLD.VIRTUALMACHINESTATE <> 0 THEN
   UPDATE PHYSICALMACHINE SET PHYSICALMACHINEVIRTUALMACHINESON = PHYSICALMACHINEVIRTUALMACHINESON-1
   WHERE NEW.PHYSICALMACHINE_PHYSICALMACHINENAME = PHYSICALMACHINENAME;
  ELSEIF NEW.VIRTUALMACHINESTATE <> 0 AND OLD.VIRTUALMACHINESTATE = 0 THEN
   UPDATE PHYSICALMACHINE SET PHYSICALMACHINEVIRTUALMACHINESON = PHYSICALMACHINEVIRTUALMACHINESON+1
   WHERE NEW.PHYSICALMACHINE_PHYSICALMACHINENAME = PHYSICALMACHINENAME;
  END IF;
 END|

 CREATE TRIGGER executioninsert AFTER INSERT ON VIRTUALMACHINEEXECUTION
FOR EACH ROW BEGIN
  IF NEW.VIRTUALMACHINEEXECUTIONSTATUS <> 0 THEN
   UPDATE VIRTUALMACHINE vm SET vm.VIRTUALMACHINESTATE = 1
   WHERE NEW.VIRTUALMACHINE_VIRTUALMACHINECODE = vm.VIRTUALMACHINECODE;
  END IF;
 END|

delimiter ;

SET GLOBAL event_scheduler = ON;
SET @@global.event_scheduler = ON;
SET GLOBAL event_scheduler = 1;
SET @@global.event_scheduler = 1;
DROP EVENT shutDown;
CREATE EVENT shutDown ON SCHEDULE EVERY 1 MINUTE ENABLE DO
UPDATE VIRTUALMACHINEEXECUTION vme SET vme.VIRTUALMACHINEEXECUTIONSTATUS =0
WHERE vme.VIRTUALMACHINEEXECUTIONTIME <= now() AND vme.VIRTUALMACHINEEXECUTIONSTATUS != 0;

CREATE EVENT shutDown ON SCHEDULE AT CURRENT_TIMESTAMP + INTERVAL 1 HOUR DO
UPDATE VIRTUALMACHINE vm,VIRTUALMACHINEEXECUTION vme SET vm.VIRTUALMACHINESTATE=0, vme.VIRTUALMACHINEEXECUTIONSTATUS =0 WHERE vme.VIRTUALMACHINEEXECUTIONTIME <= now() AND vme.VIRTUALMACHINE_VIRTUALMACHINECODE = vm.VIRTUALMACHINECODE AND vme.VIRTUALMACHINEEXECUTIONSTATUS != 0;


